<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.platform.dao.CommentDao">

    <resultMap type="com.platform.entity.CommentEntity" id="commentMap">
        <result property="id" column="id"/>
        <result property="typeId" column="type_id"/>
        <result property="valueId" column="value_id"/>
        <result property="content" column="content"/>
        <result property="addTime" column="add_time"/>
        <result property="status" column="status"/>
        <result property="userId" column="user_id"/>
    </resultMap>

    <select id="queryObject" resultType="com.platform.entity.CommentEntity">
		select
			`id`,
			`type_id`,
			`value_id`,
			`content`,
			`add_time`,
			`status`,
			`user_id`
		from mall_comment
		where id = #{id}
	</select>

    <select id="queryList" resultType="com.platform.entity.CommentEntity">
        select
        mall_comment.id,
        mall_comment.type_id,
        mall_comment.value_id,
        mall_comment.content,
        mall_comment.add_time,
        mall_comment.status,
        mall_comment.user_id,
        mall_user.username user_name,
        mall_goods.name value_name
        from mall_comment LEFT JOIN mall_user ON mall_comment.user_id = mall_user.id
        LEFT JOIN mall_goods ON mall_comment.value_id = mall_goods.id
        WHERE 1=1
        <if test="userName != null and userName.trim() != ''">
            AND mall_user.username LIKE concat('%',#{userName},'%')
        </if>
        <if test="valueName != null and valueName.trim() != ''">
            AND mall_goods.name LIKE concat('%',#{valueName},'%')
        </if>
        <if test="status != null">
            AND mall_comment.status = #{status}
        </if>
        <if test="picUrl == 'true'">
            AND EXISTS(SELECT 1 FROM mall_comment_picture WHERE mall_comment.id = mall_comment_picture.comment_id)
        </if>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by mall_comment.id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from mall_comment LEFT JOIN mall_user ON mall_comment.user_id = mall_user.id
        LEFT JOIN mall_goods ON mall_comment.value_id = mall_goods.id
        WHERE 1=1
        <if test="userName != null and userName.trim() != ''">
            AND mall_user.username LIKE concat('%',#{userName},'%')
        </if>
        <if test="valueName != null and valueName.trim() != ''">
            AND mall_goods.name LIKE concat('%',#{valueName},'%')
        </if>
        <if test="status != null">
            AND mall_comment.status = #{status}
        </if>
        <if test="picUrl == 'true'">
            AND EXISTS(SELECT 1 FROM mall_comment_picture WHERE mall_comment.id = mall_comment_picture.comment_id)
        </if>
    </select>

    <insert id="save" parameterType="com.platform.entity.CommentEntity" useGeneratedKeys="true" keyProperty="id">
		insert into mall_comment(
			`type_id`,
			`value_id`,
			`content`,
			`add_time`,
			`status`,
			`user_id`)
		values(
			#{typeId},
			#{valueId},
			#{content},
			#{addTime},
			#{status},
			#{userId})
	</insert>

    <update id="update" parameterType="com.platform.entity.CommentEntity">
        update mall_comment
        <set>
            <if test="typeId != null">`type_id` = #{typeId},</if>
            <if test="valueId != null">`value_id` = #{valueId},</if>
            <if test="content != null">`content` = #{content},</if>
            <if test="addTime != null">`add_time` = #{addTime},</if>
            <if test="status != null">`status` = #{status},</if>
            <if test="userId != null">`user_id` = #{userId}</if>
        </set>
        where id = #{id}
    </update>

    <delete id="delete">
		delete from mall_comment where id = #{value}
	</delete>

    <delete id="deleteBatch">
        delete from mall_comment where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>